# Stage 1: Builder
FROM golang:1.24 AS builder
WORKDIR /app

# Copy Go modules
COPY backend/user/go.mod backend/user/go.sum ./user/
COPY backend/mail/protoc/go.mod backend/mail/protoc/go.sum ./mail/protoc/

# Download dependencies
WORKDIR /app/user
RUN go mod tidy && go mod download

WORKDIR /app/mail/protoc
RUN go mod tidy && go mod download

# Copy all source code
COPY backend/user/ ./user/
COPY backend/mail/protoc/ ./mail/protoc/

# Build user service
WORKDIR /app/user
RUN CGO_ENABLED=0 GOOS=linux go build -o userService .

# Build Goose inside the builder
RUN go get github.com/pressly/goose/v3/cmd/goose@latest
RUN CGO_ENABLED=0 GOOS=linux go build -o goose github.com/pressly/goose/v3/cmd/goose

# Stage 2: Final image
FROM alpine:3.18
RUN apk add --no-cache bash ca-certificates

WORKDIR /app

# Copy binaries
COPY --from=builder /app/user/userService /app/userService
COPY --from=builder /app/goose /usr/local/bin/goose
RUN chmod +x /usr/local/bin/goose
ENV PATH="/usr/local/bin:${PATH}"

# Copy migrations and env
COPY backend/user/sql/schema /app/sql/schema
COPY backend/user/.env /app/.env

EXPOSE 7071

# Run migrations then start service
ENTRYPOINT ["/bin/sh", "-c", "goose -dir /app/sql/schema postgres ${DATABASE_URL} up && ./userService"]




# # Stage 1: Build using golang:alpine
# FROM golang:1.24 as builder

# WORKDIR /app

# # Copy Go modules and download dependencies
# COPY go.mod go.sum ./
# RUN go mod tidy
# RUN go mod download

# # Copy the rest of the application code
# COPY . .

# # Build the Go binary
# RUN CGO_ENABLED=0 GOOS=linux go build -o userService .

# # Install Goose for migrations
# RUN go install github.com/pressly/goose/v3/cmd/goose@latest

# # Stage 2: Final image
# FROM alpine:3.18

# RUN apk add --no-cache bash ca-certificates

# WORKDIR /app

# # Copy built binary
# COPY --from=builder /app/userService /app/userService

# # Copy Goose
# COPY --from=builder /go/bin/goose /usr/local/bin/goose

# # Copy migrations
# COPY ./sql/schema /app/sql/schema

# # Copy .env into container
# COPY .env /app/.env

# RUN chmod +x /usr/local/bin/goose

# EXPOSE 7071

# # Run migrations first, then start the service
# ENTRYPOINT ["/bin/sh", "-c", "goose -dir /app/sql/schema postgres ${DATABASE_URL} up && ./userService"]