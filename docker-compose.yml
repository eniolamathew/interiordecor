services:
  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper_interior
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 4000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    networks:
      - interior_design_network 

  kafka: 
    image: confluentinc/cp-kafka:latest
    container_name: kafka_interior
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper_interior:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT_INTERIOR:PLAINTEXT,PLAINTEXT_LOCAL:PLAINTEXT"
      KAFKA_LISTENERS: "PLAINTEXT_INTERIOR://0.0.0.0:9092,PLAINTEXT_LOCAL://localhost:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_INTERIOR://kafka_interior:9092,PLAINTEXT_LOCAL://localhost:9093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "image-generation-request-topic:1:1,image-generation-response-topic:1:1"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT_INTERIOR"
    depends_on:
      - zookeeper
    networks:
      - interior_design_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui_interior
    ports:
      - "9090:9090"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka_interior:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    depends_on:
      - kafka
    networks:
      - interior_design_network

  migration-user:
    image: golang:1.22
    container_name: db_migration_user
    depends_on:
    - userInteriorDb
    volumes:
    - ./backend/user:/app/user  
    - ./backend/mail:/app/mail  
    working_dir: /app/user
    entrypoint: >
      /bin/sh -c "
      go mod tidy &&  
      GOBIN=/usr/local/bin go install github.com/pressly/goose/v3/cmd/goose@latest &&
      goose -dir /app/user/sql/schema postgres postgres://user_user:userinterior@userInteriorDb:5432/user_db?sslmode=disable up
      "
    networks:
     - interior_design_network  

  migration-design:
    image: golang:1.22
    container_name: db_migration_design
    depends_on:
      - generatedImageDb
    volumes:
      - ./backend/design:/app  
    working_dir: /app
    entrypoint: >
      /bin/sh -c "
      go mod tidy &&
      GOBIN=/usr/local/bin go install github.com/pressly/goose/v3/cmd/goose@latest &&
      goose -dir /app/sql/schema postgres postgres://generatedimage_user:imageinterior@generatedImageDb:5432/generatedimage_db?sslmode=disable up
      "
    networks:
      - interior_design_network

  user-interior-service:
    container_name: interior_user_container
    image: interior_user_image
    build:
      context: ./backend/user
      dockerfile: dockerfile
    environment:
      - DATABASE_HOST=userInteriorDb
      - DATABASE_PORT=5432
      - DATABASE_NAME=user_db
      - DATABASE_USER=user_user
      - DATABASE_PASSWORD=userinterior
      - DATABASE_URL=postgres://user_user:userinterior@userInteriorDb:5432/user_db?sslmode=disable
    depends_on:
      - userInteriorDb
    networks:
      - interior_design_network
    ports:
      - "7071:7071"
    env_file:
      - ./backend/user/.env  
    volumes:
      - ./backend/user/.env:/app/.env

  mail-interior-service:
    container_name: interior_mail_container
    image: interior_mail_image
    build:
      context: ./backend/mail
      dockerfile: dockerfile
    networks:
      - interior_design_network
    ports:
      - "7072:7072"
    env_file:
      - ./backend/mail/.env  
    volumes:
      - ./backend/mail/.env:/app/.env
      - ./backend/mail/emailTemplates:/app/emailTemplates
  
  design-interior-service:
    container_name: interior_design_container
    image: interior_design_image
    environment:
      - DATABASE_HOST=generatedImageDb
      - DATABASE_PORT=5432
      - DATABASE_NAME=generatedimage_db
      - DATABASE_USER=generatedimage_user
      - DATABASE_PASSWORD=imageinterior
      - DATABASE_URL=DB_URL=postgres://generatedimage_user:imageinterior@generatedImageDb:5432/generatedimage_db?sslmode=disable
    depends_on:
      - generatedImageDb
      - kafka
    build:
      context: ./backend/design
      dockerfile: dockerfile
    networks:
      - interior_design_network
    ports:
      - "7073:7073"
    env_file:
      - ./backend/design/.env  
    volumes:
      - ./backend/design/.env:/app/.env

  imagegeneration-interior-service:
    container_name: interior_imagegeneration_container
    image: interior_imagegeneration_image
    build:
      context: ./backend/imageGeneration
      dockerfile: dockerfile
    networks:
      - interior_design_network
    ports:
      - "7074:7074"
    depends_on:
      - kafka
    env_file:
      - ./backend/imageGeneration/.env  
    volumes:
      - ./backend/imageGeneration/.env:/app/.env

  imageresponse-interior-service:
    container_name: interior_imageresponse_container
    image: interior_imageresponse_image
    build:
      context: ./backend/imageResponse
      dockerfile: dockerfile
    networks:
      - interior_design_network
    ports:
      - "7075:7075"
    depends_on:
      - kafka
    env_file:
      - ./backend/imageResponse/.env  
    volumes:
      - ./backend/imageResponse/.env:/app/.env

  userInteriorDb:
    container_name: userInteriorDb_container
    image: postgres:16
    environment:
      - POSTGRES_USER=user_user
      - POSTGRES_PASSWORD=userinterior
      - POSTGRES_DB=user_db
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - interior_design_network
    ports:
      - "5452:5432"

  generatedImageDb:
    container_name: generatedImageDb_container
    image: postgres:16
    environment:
      - POSTGRES_USER=generatedimage_user
      - POSTGRES_PASSWORD=imageinterior
      - POSTGRES_DB=generatedimage_db
    volumes:
      - generatedimage_db_data:/var/lib/postgresql/data
    networks:
      - interior_design_network
    ports:
      - "5453:5432"
    
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ./frontend/.env.production 
    networks:
      - interior_design_network

networks:
  interior_design_network:
    driver: bridge

volumes:
  user_db_data:
  generatedimage_db_data: